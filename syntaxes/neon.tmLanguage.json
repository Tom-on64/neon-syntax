{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Neon",
  "scopeName": "source.ne",
  "fileTypes": ["ne"],
  "patterns": [{ "include": "#codeblock" }],
  "repository": {
    "codeblock": {
      "patterns": [
        { "include": "#strings" },
        { "include": "#numbers" },
        { "include": "#comments" },
        { "include": "#keywords" },
        { "include": "#operators" },
        { "include": "#modifiers" },
        { "include": "#imports" },
        { "include": "#types" },
        { "include": "#userTypes" },
        { "include": "#functionCalls" },
        { "include": "#classes" }
      ]
    },
    "imports": {
      "name": "storage.modifier.import.neon",
      "match": "\\bimport\\s+[A-Za-z_]([A-Za-z0-9_]|\\.)*(\\s*,\\s*[A-Za-z_]([A-Za-z0-9_]|\\.)*)*\\b"
    },
    "strings": {
      "name": "string.neon",
      "patterns": [
        {
          "name": "string.quoted.double.neon",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.neon",
              "match": "\\\\(x[0-9a-fA-F]{2}|[nrt\"'/\\\\])\\\\"
            }
          ]
        },
        {
          "name": "constant.character.neon",
          "match": "'(.|\\\\(x[0-9a-fA-F]{2}|[nrt\"'/\\\\]))'"
        },
        {
          "name": "string.quoted.backtick.neon",
          "begin": "`",
          "end": "`",
          "beginCaptures": {
            "0": { "name": "string.quoted.backtick.neon" }
          },
          "endCaptures": {
            "0": { "name": "string.quoted.backtick.neon" }
          },
          "patterns": [
            {
              "name": "constant.character.escape.neon",
              "match": "\\\\(x[0-9a-fA-F]{2}|[nrt\"'/\\\\])\\\\"
            }
          ]
        }
      ]
    },
    "numbers": {
      "name": "constant.numeric.neon",
      "match": "-?\\d+(.\\d+)?(f|d)?"
    },
    "comments": {
      "name": "comment.neon",
      "patterns": [
        {
          "name": "comment.line.double-slash.neon",
          "match": "//.*?$"
        },
        {
          "name": "comment.block",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "keywords": {
      "name": "keyword.neon",
      "patterns": [
        {
          "name": "keyword.control.neon", 
          "match": "\\b(if|else|for|while|return|break|continue)\\b"
        }, 
        {
          "name": "constant.null.neon", 
          "match": "\\bnull\\b"
        }
      ]
    },
    "operators": {
      "name": "keyword.operator.neon",
      "match": "(\\+|-|\\*|\\/|%|\\+\\+|--|=|==|!=|>|<|>=|<=|&&|\\|\\||!|&|\\||\\^|~|<<|>>|>>>|new|typeof|instanceof)"
    },
    "modifiers": {
      "name": "storage.modifier",
      "match": "(public|private|protected|internal|static|final|abstract|virtual|override|const|readonly|volatile|async|await|throws|synchronized|native|transient|volatile|deprecated)"
    },
    "types": {
      "name": "support.type.neon",
      "match": "\\b(void|byte|sbyte|short|ushort|int|uint|long|ulong|float|double|char|bool|string|object)\\b",
      "captures": {
        "0": { "name": "keyword.other.neon" }
      }
    },
    "functionCalls": {
      "name": "entity.name.function.neon",
      "begin": "[a-zA-Z_][a-zA-Z_0-9]*\\s*\\(",
      "end": "\\)",
      "patterns": [
        { "include": "#strings" },
        { "include": "#numbers" },
        { "include": "#modifiers" },
        { "name": "variable.parameter.function.neon", "match": "[^)]*" }
      ]
    },
    "classes": {
      "name": "entity.name.class.neon",
      "begin": "\\bclass\\s+([A-Za-z_][A-Za-z_0-9]*)\\s*(:\\s*([A-Za-z_][A-Za-z_0-9]*)(\\s*,\\s*([A-Za-z_][A-Za-z_0-9]*))*)?\\s*\\{",
      "end": "\\}",
      "patterns": [
        { "include": "#comments" },
        { "include": "#types" },
        { "include": "#userTypes" },
        { "include": "#functionCalls" },
        { "include": "#modifiers" },
        {
          "name": "entity.name.method",
          "begin": "\\b[a-zA-Z_][a-zA-Z_0-9]*\\b",
          "end": "\\}",
          "patterns": [{ "include": "#codeblock" }]
        }
      ]
    }
  }
}
